// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  // url      = "postgresql://postgres:RosieDore123@localhost:5431/postgres"
  url      = env("DATABASE_URL")
}


model User {
  id                          String      @id @default(uuid())
  name                        String
  email                       String      @unique
  createdAt                   DateTime    @default(now())
  updatedAt                   DateTime    @updatedAt
  isVerified                  Boolean     @default(false)
  profilePictureUrl           String?
  professionalProfile         ProfessionalProfile?
  socialLinks                 SocialLinks?

  accounts                    Account[]
  @@index([email])
}

model Account {
  id                 String   @id @default(uuid())
  userId             String
  provider           String   // e.g. "email" | "google"
  providerAccountId  String   // e.g. Google user id
  password           String?  // only for email provider
  verificationToken  String?  @unique
  verificationTokenExpiresAt DateTime?

  user               User     @relation(fields: [userId], references: [id])
  @@unique([provider, providerAccountId])
}



model ProfessionalProfile {
  id String @id @default(uuid())
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique


position String
company String
companyLocation String
bio String
portfolioUrl String?

createdAt DateTime @default(now())
updatedAt DateTime @updatedAt
 
}

model SocialLinks {

id String @id @default(uuid())
user User @relation(fields: [userId], references: [id], onDelete: Cascade)
userId String @unique
 linkedIn String?
  facebook String?
  instagram String?
  github String?
  X String?
  youtube String?
  website String?
  createdAt DateTime @default(now())
updatedAt DateTime @updatedAt
}